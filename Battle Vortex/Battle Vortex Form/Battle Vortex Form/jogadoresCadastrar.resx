<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>